# This is application development ver 1.1 ----- by Hoang Anh Minh

This application offers a possibility to turn a Raspberry Pi as a sound 
device. The application comes with 2 functions: a sound collector and a
test tone generator

List of content
	1. Configuration Instruction
	2. Installation Instruction
	3. Operating Instruction
	4. List of Files
	5. Copyright / Copyleft
	6. Contact Info.
	7. Credits and Acknowledgements

1. Configuration Instructions
	+ A raspberry Pi
	+ An Ethernet
	+ USB Soundcard
	+ Headphone and Microphone
	+ Power cable

2. Installation Instructions
	+ Install the lastest NOOBS version of Raspberry Pi from: https://www.raspberrypi.org/downloads/noobs/
	+ RPi Default Booting & Keyboard Layout
		1.By default Raspberry Pi boots into X-server (graphic) mode. This increases booting time, but in most cases we don't use a display with RPi,
		so the first thing is to disable it. To do so, you need to connect RPi to a display via HDMI-DIV cable.
		2.You also need a USB keyboard for this step. Connect it to your RPi.
		3.Once booted, open a "terminal" window (Ctrl+ESC, and choose from the "Accessories").
		4.Run "sudo raspi-config" command.
		5.Select from "boot options": "Text console, auto-login".
		6.The newer version of Raspbian disables SSH by default, therefore you have to enable it. Navigate to "Interfacing Options" and select "SSH"
		, Choose "Yes", Select "Ok"
		7.You can also change the keyboard to be "Generic 105 key/Finnish" in "4. Internationalization Options".
		8.Reboot "sudo reboot"
	+ Send IP Address by Email 
		1. When using Raspberry Pi remotely, you need to know its IP address to connect to it.
		There are many ways to get the IP address from your Pi. The simplest way to edit "rc.local" file.
		2. First you need to get a digital signature of your student ID. Please run following command: 
		pi@raspberrypi:~ $ curl --url "http://www.cc.puv.fi/~gc/php/sha_stuID.php" -d "id=e1700346"
		And you will get:
		welcome to SHA-1 hashing function
		Your ID : e1700346
		SHA hash of your ID: c040f7cde553dc1739ff9b6eebcb1d6f994ce3cb
		Copy the SHA string to clipboard (in Putty window, ctrl+"Insert" to copy, shift+"Insert" to paste) 
		and run command .sudo nano /etc/rc.local. and add following lines:
		# Print the IP address
			sleep 30

		_IP=$(hostname -I) || true
		if [ "$_IP" ]; then
		printf "My IP address is %s\n" "$_IP"
		curl --url http://www.cc.puv.fi/~gc/php/sendMailRPi.php -d .email=gc@vamk.fi&from=e1700346&hash=YOURHASH.
		curl --url http://www.cc.puv.fi/~gc/php/rasp.php -d "ip=$_IP&name=e1700346"
		curl --url http://www.cc.puv.fi/~juma/raspi/rasp_ip.php -d "auth=mckdoe03&name=e1700346&ip=$_IP"
	fi

	exit 0

		4. The line .sleep 30. is to guarantee that IP address is available.
		5. The 1st "curl" command sends IP address to your mail box (please change "email" to your email) using a PHP program. 
		The program will verify your ID and signature so please make sure they are correct.
		6. The 2nd "curl" command sends IP address to GC.s PHP page and you can see your device name/IP on http://www.cc.puv.fi/~gc/php/rasp.php. 
		7. The 3rd .curl. command sends IP address to Jukka Matila.s PHP page and 
		you can see your device in his page: http://www.cc.puv.fi/~juma/raspi/. 

	+ Install USB sound card as default audio device
		1. Install alsamixer using command "sudo apt-get install alsa".
		2. Boot up RPi, and apply the USB sound card.
		3. RPi onboard sound card does not have microphone interface. We have to change the default audio device to be USB sound card.
		4. Use command "lsusb" to check if your USB sound card is mounted.
		5. Use "sudo nano /etc/asound.conf" command and put following content to the file:
	pcm.!default {
		type plug
		slave {
			pcm "hw:1,0"
		}
	}
	ctl.!default {
		type hw
		card 1
	}
		6. Go to home directory. Use "nano .asoundrc" command and put the same content to the file.
		7. Run "alsamixer" you should be able to see that USB sound card is the default audio device.
		For a more sensitive sound detection, it is better to maximize the volume of "Mic".

	+ Install libcurl library
		1. First use command "ls/usr/include/curl" or "ls/usr/include/arm-linux-gnueabihf/curl" to
		identify that libcurl library is installed
		2. If the folder doesn't exist. Run "sudo apt-get update" to up-date the application list.
		3. Run "sudo apt-get install libcurl3" to install the libcurl 3.
		4. Run "sudo apt-get install libcurl4-openssl-dev" to install the development API of libcurl 4.

	+ Adding files to your Github
	- First setup -
		1. Create a respository on Github with "your respository name".
		2. Go to your directory that you want to remote to Github on Linux.
		3. Use command "echo "# your respository name" >> README.md".
		4. Use command "git init".
		5. git add README.md
		6. git commit -m "first commit"
		7. git remote add origin https://github.com/your username/your respository name.git
		8. git push -u origin master
	- Uploading files -
		1. Use command line "git add" + your filenames that you want to upload.
		2. Use "git status" to make sure it has been added for committing.
		3. Use "git commit -m" + "your commit".
		4. Use "git push origin master -u".
		5. Login to your account and check the pushed files on your Github page.


3. Operating Instructions
	- Run command "make clean" to remove all unnecessary previous files
	- Run command "make" to build the project.
    - Run command "./sound.out" to run the project. 
    You will see the columns which display the recorded sound.
    - You can also open "testcurl.txt" for accessing the recorded results.
    - To delete excution file, to command "make clean".
    - The recorded data is also sent to school server for storage.
	
4. List of Files
	makefile: is a text file and created by the programme
	README: introductions and instructions for my project ( this file )
	screen.h: the header file of screen.c  
	screen.c: the displaying part of the project
	sound.h: the header file of sound.c
	sound.c: the sound analyzing part the project
	comm.c:	the communication part of the project
	comm.h:	the header file of comm.c
	main.c:	contains the main() function
	testcurl.c: this file receives all the communication testing modules
	sound.php: the data receving page

5. Copyright / Copyleft

	This project was created by Hoang Anh Minh-e1800956 (VAMK)

6. Contact Info

	Name: Hoang Anh Minh
	Email: hoanganhminh10a2hoa@gmail.com

7. Credits and Acknowledgements

	Author: Hoang Anh Minh-e1800956 (VAMK)
	Instructor: Mr. Gao Chao (VAMK)
